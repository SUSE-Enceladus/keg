.. _generate_recipes_changelog:

generated_recipes_changelog
===========================

.. _generate_recipes_changelog_synopsis:

SYNOPSIS
--------

**generate_recipes_changelog** [*options*] <logfile>

DESCRIPTION
-----------

:program:`generate_recipes_changelog` generates a change log from the git
commit history of one or more `keg-recipes` repositories. The input file is a
source info log that is generated by :program:`keg` when run with source
tracking enabled (`-s` command line switch).

The exit status is 0 in case a change log was generated successfully, 1
in case an error occurred, or 2 in case no error occurred but generated
change log is empty.

.. _generate_recipes_changelog_options:

ARGUMENTS
---------

logfile

  A source info log file produced by :program:`keg`.

OPTIONS
-------

.. option:: -o OUTPUT_FILE

   Write output to OUTPUT_FILE (stdout if omitted)

.. option:: -r PATH:REV

   Set git revision range to REV for repo at PATH

   .. note::
      This limits the applicable set of commits to the given revision spec.
      This can be used to select only newer changes from a previous change log
      generator run. See EXAMPLE below.

.. option:: -f FORMAT

   Output format, 'text' or 'yaml' [default: yaml]

.. option:: -m MSG_FORMAT

   Format spec for commit messages (see 'format:<string>' in 'man git-log')
   [default: - %s] (only used with text format)

.. option:: -t ROOT_TAG

   Use ROOT_TAG for yaml output (e.g. image version)

EXAMPLE
-------

.. code:: bash

   generate_recipes_changelog -r /path/to/repo:12345678.. -t 1.1.8 log_sources

This will produce a YAML change log, namespaced with `1.1.8`, intended as a
version number, only considering commits after hash `12345678`. If `12345678`
was the hash of the HEAD commit in the checked out branch at
:file:`/path/to/repo` at the previous run of `generate_recipes_changelog` on
the same data set, this would limit the change log to only contain newer
changes. This method can be used to produce incremental change logs.

The change log will have the following format:

.. code:: yaml

  1.1.8:
    - change: git message subject
      date: git commit UTC timestamp
      details: |-
        git message body
    ...

