<?xml-model 
      href="file:/usr/share/xml/docbook/schema/rng/5.1/docbookxi.rnc"
      type="application/relax-ng-compact-syntax"
     ?>
<book xmlns="http://docbook.org/ns/docbook" xml:lang="en" version="5.1" xml:id="keg-documentation">
  <title>Keg Documentation</title>
  <info/>
  <preface>
    <title>Preface</title>
    <itemizedlist>
      <listitem>
        <para>
          <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/SUSE-Enceladus/keg">GitHub Sources</link>
        </para>
      </listitem>
    </itemizedlist>
  </preface>
  <chapter xml:id="overview" xml:base="overview">
    <title>Overview</title>
    <note>
      <para>
        <emphasis role="bold">Abstract</emphasis>
      </para>
      <para>This document provides a conceptual overview about the steps of creating
                an image description with keg which can be used to build an appliance
                with the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://osinside.github.io/kiwi/">KIWI</link> appliance builder.</para>
    </note>
    <section xml:id="conceptual-overview">
      <title>Conceptual Overview</title>
      <para>Keg is a tool which helps to create and manage image descriptions suitable
                for the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://osinside.github.io/kiwi/">KIWI</link> appliance builder. Its
                main use case is to keep control over a larger amount of image descriptions
                and prevent duplication of description data.</para>
      <para>The key component for Keg is a data structure called <literal>image definition tree</literal>.
                This data structure contains all information to create KIWI image
                descriptions and provides data in a way that no or as little as possible
                duplication exists. The <literal>image definition tree</literal> consists out of three
                major components:</para>
      <variablelist>
        <varlistentry>
          <term>Data Building Blocks: <literal>data</literal></term>
          <listitem>
            <para>Independent collection of components used in KIWI image
                            descriptions. This includes for example information about
                            packages, repositories or custom script code and more.
                            A building block should be created to represent a certain
                            functionality or to provide a capability for a certain
                            target distribution such that it can be used in a variety
                            of different image descriptions.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Image Definitions: <literal>images</literal></term>
          <listitem>
            <para>Formal instructions which building blocks should be used for
                            the specified image</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Schema Templates: <literal>schemas</literal></term>
          <listitem>
            <para>Templates to implement Syntax and Semantic of image description
                            files as required by KIWI</para>
          </listitem>
        </varlistentry>
      </variablelist>
      <para>The setup of the <literal>image definition tree</literal> is the most time consuming
                part when using Keg. Because of this reason it’s part of the Keg
                project to provide one implementation of such a tree as a service to
                our users. The provided information will be done with the scope set
                on <emphasis role="bold">Public Clouds</emphasis>. As we from the public cloud development team
                use Keg to manage our own image descriptions it’s natural that the
                provided data in the open source project is aligned to cloud
                environments. However, this is not a limitation and we welcome any
                contributions independent of the target they serve. Please find
                our <literal>image definition tree</literal> here:
                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/SUSE-Enceladus/keg-recipes">Public Cloud Image Definition Tree</link></para>
    </section>
    <section xml:id="working-with-keg">
      <title>Working With Keg</title>
      <para>Using Keg is done in three steps:</para>
      <procedure>
        <step>
          <para>Fetch or create an <literal>image definition tree</literal></para>
        </step>
        <step>
          <para>Call the <literal>keg</literal> commandline utility to create a KIWI image description</para>
        </step>
        <step>
          <para>Call <literal>kiwi-ng</literal> and create an appliance from the description</para>
        </step>
      </procedure>
      <para>For the above to work, Keg needs to be installed as described in
                <xref linkend="installation"/>. In addition install KIWI as described here:
                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://osinside.github.io/kiwi/installation.html"/></para>
      <para>If all software components are installed, Keg can be utilized like
                the following example shows:</para>
      <screen language="shell-session">$ git clone https://github.com/SUSE-Enceladus/keg-recipes.git

$ keg --recipes-root keg-recipes --dest-dir sles_description \
      sles/byos/15-sp2

$ sudo kiwi-ng system build --description sles_description \
      --target-dir kiwi_image</screen>
    </section>
  </chapter>
  <chapter xml:id="installation" xml:base="installation">
    <title>Installation</title>
    <note>
      <para>This document describes how to install Keg. Currently keg is
                provided from <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://pypi.org/project/kiwi_keg/">PyPi</link> and
                further install methods for Linux distributions will follow
                soon.</para>
    </note>
    <section xml:id="installation-from-pypi">
      <title>Installation from PyPI</title>
      <para>Keg can be obtained from the Python Package Index (PyPi) via Python’s
                package manager pip:</para>
      <screen language="shell-session">$ pip install kiwi_keg</screen>
    </section>
  </chapter>
  <chapter xml:id="command-line" xml:base="commands">
    <title>Command Line</title>
    <section xml:id="keg" xml:base="commands/keg">
      <title>keg</title>
      <section xml:id="keg-synopsis">
        <title>SYNOPSIS</title>
        <screen language="bash">keg (-r RECIPES_ROOT|--recipes-root=RECIPES_ROOT)
    [-a ADD_DATA_ROOT] ... [-d DEST_DIR] [-fv]
    SOURCE
keg -h | --help
keg -h | --help</screen>
      </section>
      <section xml:id="description">
        <title>DESCRIPTION</title>
        <para>Keg is a tool which helps to create and manage image descriptions suitable
                for the <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://osinside.github.io/kiwi/">KIWI</link> appliance builder. Its
                main use case is to keep control over a larger amount of image descriptions
                and prevent duplication of description data.</para>
        <para>The key component for Keg is a data structure called <literal>image definition tree</literal>.
                This data structure contains all information to create KIWI image
                descriptions and provides data in a way that no or as little as possible
                duplication exists.</para>
        <para>Please find an implementation of an <literal>image definition tree</literal> with
                a focus on Public Cloud images here:
                <link xmlns:xl="http://www.w3.org/1999/xlink" xl:href="https://github.com/SUSE-Enceladus/keg-recipes">Public Cloud Image Definition Tree</link></para>
      </section>
      <section xml:id="keg-options">
        <title>ARGUMENTS</title>
        <para>SOURCE</para>
        <para>Path to image source, expected under RECIPES_ROOT/images</para>
      </section>
      <section xml:id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term>
              <option>-r</option>
              <option>--recipes-root</option>
            </term>
            <listitem>
              <para>Root directory of keg recipes</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>-a</option>
              <option>--add-data-root</option>
            </term>
            <listitem>
              <para>Additional data root directory of recipes (multiples allowed)</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>-d</option>
              <option>--dest-dir</option>
            </term>
            <listitem>
              <para>Destination directory for generated description, default cwd</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>-f</option>
              <option>--force</option>
            </term>
            <listitem>
              <para>Force mode (ignore errors, overwrite files)</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>
              <option>-v</option>
              <option>--verbose</option>
            </term>
            <listitem>
              <para>Enable verbose output</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </section>
      <section xml:id="example">
        <title>EXAMPLE</title>
        <screen language="bash">$ git clone https://github.com/SUSE-Enceladus/keg-recipes.git

$ keg --recipes-root keg-recipes --dest-dir sles_description sles/byos/15-sp2</screen>
      </section>
    </section>
  </chapter>
</book>
