# Tox configuration file
#
# For more information, see https://tox.readthedocs.org
#
# Run it with
#  a) all targets
#    $ tox
#
#  b) with specific targets (build only documentation):
#    $ tox -e doc
#
[tox]
skip_missing_interpreters = True
skipsdist = True
envlist =
    check,
    unit_py3_8,
    unit_py3_6,
    devel,
    doc

[testenv]
whitelist_externals = *
basepython =
    {check,devel,doc,doc_suse}: python3
    unit_py3_8: python3.8
    unit_py3_6: python3.6
    release: python3.6
envdir =
    {check,devel,doc,doc_suse}: {toxworkdir}/3
    unit_py3_8: {toxworkdir}/3.8
    unit_py3_6: {toxworkdir}/3.6
    release: {toxworkdir}/3.6
passenv =
    *
usedevelop = True
deps =
    -r.virtualenv.dev-requirements.txt


# Unit Test run with basepython set to 3.6
[testenv:unit_py3_6]
skip_install = True
usedevelop = True
setenv =
    PYTHONPATH={toxinidir}/test
    PYTHONUNBUFFERED=yes
    WITH_COVERAGE=yes
passenv =
    *
deps = {[testenv]deps}
changedir=test/unit
commands =
    bash -c 'cd ../../ && ./setup.py develop'

    {envdir}/bin/mypy --ignore-missing-imports {toxinidir}/kiwi_keg/

    pytest --no-cov-on-fail --cov=kiwi_keg \
        --cov-report=term-missing \
        --cov-fail-under=100 {posargs}


# Unit Test run with basepython set to 3.8
[testenv:unit_py3_8]
skip_install = True
usedevelop = True
setenv =
    PYTHONPATH={toxinidir}/test
    PYTHONUNBUFFERED=yes
    WITH_COVERAGE=yes
passenv =
    *
deps = {[testenv]deps}
changedir=test/unit
commands =
    bash -c 'cd ../../ && ./setup.py develop'

    {envdir}/bin/mypy --ignore-missing-imports {toxinidir}/kiwi_keg/

    pytest --doctest-modules --no-cov-on-fail --cov=kiwi_keg \
        --cov-report=term-missing \
        --cov-fail-under=100 {posargs}

# Documentation build
[testenv:doc]
skip_install = True
usedevelop = True
deps = {[testenv]deps}
changedir=doc
commands =
    {[testenv:doc.html]commands}
    {[testenv:doc.man]commands}

[testenv:doc_suse]
description = Documentation build suitable for SUSE documentation
skip_install = True
usedevelop = True
deps = {[testenv:doc]deps}
changedir=doc
commands =
    {[testenv:doc.xml]commands}
    rstxml2docbook -v --no-split -o xml/book.xml build/restxml/index.xml
    cp -a xml build/
    cp DC-keg build/
    bash -c 'cd build && daps -d DC-keg html'

[testenv:doc.html]
description = Documentation build html result
skip_install = True
deps = {[testenv:doc]deps}
changedir=doc
commands =
    make html

[testenv:doc.xml]
description = Documentation build xml result
skip_install = True
deps = {[testenv:doc]deps}
changedir=doc
commands =
    make xml
    rm -rf build/restxml
    mv build/xml build/restxml

# Documentation build man pages
[testenv:doc.man]
skip_install = True
deps = {[testenv:doc]deps}
changedir=doc
commands =
    make man


# Source code quality/integrity check
[testenv:check]
deps = {[testenv]deps}
skip_install = True
usedevelop = True
commands =
    flake8 --statistics -j auto --count {toxinidir}/kiwi_keg
    flake8 --statistics -j auto --count {toxinidir}/test/unit

# PyPi prepare for upload
[testenv:release]
deps = {[testenv]deps}
skip_install = True
usedevelop = True
commands =
    python setup.py sdist
